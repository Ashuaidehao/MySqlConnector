sudo: required
dist: trusty
services: docker

env:
  - IMAGE=
    NAME=azure
    OMIT_FEATURES=Sha256Password,CachingSha2Password,KnownCertificateAuthority,Timeout,ErrorCodes
    secure: pzqwb08GpsoHkss1bSprwcvRNts/mgaFDD+dUOf6HQPr8n2mM9jeqlYBs0gse3g+XE/yRHluObbuITlyIxo+Gbe4XX+4aSka3pTkFytqX+wOcp6CgYES5RtZgX1fLiX55vTCq3Yl6voN0rhaE2Deoq9Fmta+44TyUGVzymiwT7qRSkV71BR1sn8GyGCnglwGAU+K4BSK5Kcdd/BBOOaV8R96m+lzx0nAy3yqWFufIFQ6JV6Ri8YNO1rMgQz43Pvc/aPKagoSDc+E2/+VKbtsp2ElLdmNs0/wJ+H0Yk4lUMzisuAEO0pOR3PIVIbDfE5JJH9xYRli18cGqc4vBT2tx9/OSb/n4HtO8k7oOIPNQxnBHBA4N7Vd9CHZOSLTy91O20tMmFlLO2otP0qRBvpzd7hdri++UAmJgCmOJWCGPXmM01gtR/rJSGTLB9/ah1nf/Vm7gjothuAIAoD+9SEduiFb4N2qyUONYXK92kRvzTtvRMUz7r1zsU8I9IUdDkyqj7EU1bCDp6AJZFxTG8Qn4ORUC4qBBvdOESO1eoyhnI4bb3Af0PxrwcISRofK3sjJtzwZ3DyE0AL6z0kDIRW0mKLlJIV4XlB7P3QWOqTrlzi13rCSpigpgF2KQLTbK1IA6JuZMym7Eh7mH7goS8tpVMjI5ISdnObzqHOiwxzQmQM=
  - IMAGE=mysql:5.6
    NAME=mysql
    OMIT_FEATURES=Json,Sha256Password,OpenSsl,LargePackets,CachingSha2Password,SessionTrack
  - IMAGE=mysql:5.7
    NAME=mysql
    OMIT_FEATURES=OpenSsl,CachingSha2Password
  - IMAGE=mysql:8.0
    NAME=mysql
    OMIT_FEATURES=OpenSsl
  - IMAGE=percona:5.7
    NAME=percona
    OMIT_FEATURES=CachingSha2Password
  - IMAGE=mariadb:10.2
    NAME=mariadb
    OMIT_FEATURES=Json,Sha256Password,CachingSha2Password

before_install:
- [[ -n $"IMAGE" ]] && .ci/docker-run.sh $IMAGE $NAME 3307 $OMIT_FEATURES
- curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
- sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
- sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
- sudo apt-get update
- sudo apt-get install -y dotnet-sdk-2.0.0 dotnet-sharedframework-microsoft.netcore.app-1.1.2

script:
- dotnet restore
- pushd tests/MySqlConnector.Tests && dotnet xunit -c Release && popd
- [[ -n $"IMAGE" ]] && pushd tests/Conformance.Tests && CONNECTION_STRING="Server=localhost;Port=3307;User Id=mysqltest;Password='test;key=\"val';SSL Mode=None" dotnet xunit -c Release && popd
- pushd tests/SideBySide
- dotnet build SideBySide.csproj -c Release -f netcoreapp2.0
- echo 'Executing netcoreapp1.1.2 tests with No Compression, No SSL' && ../../.ci/use-config.sh config.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp1.1.2
- echo 'Executing netcoreapp2.0 tests with No Compression, No SSL' && ../../.ci/use-config.sh config.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp2.0
- echo 'Executing netcoreapp2.0 Debug Only tests' && time dotnet xunit -c Debug -f netcoreapp2.0 -class SideBySide.DebugOnlyTests
- [[ -n $"IMAGE" ]] && echo 'Executing netcoreapp2.0 tests with Compression, No SSL' && ../../.ci/use-config.sh config.compression.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp2.0
- [[ -n $"IMAGE" ]] && echo 'Executing netcoreapp1.1.2 tests with No Compression, SSL' && ../../.ci/use-config.sh config.ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp1.1.2
- [[ -n $"IMAGE" ]] && echo 'Executing netcoreapp2.0 tests with No Compression, SSL' && ../../.ci/use-config.sh config.ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp2.0
- [[ -n $"IMAGE" ]] && echo 'Executing netcoreapp2.0 tests with Compression, SSL' && ../../.ci/use-config.sh config.compression+ssl.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp2.0
- [[ -n $"IMAGE" ]] && echo 'Executing netcoreapp2.0 tests with Unix Domain Socket, No Compression, No SSL' && ../../.ci/use-config.sh config.uds.json 172.17.0.1 3307 $NAME $OMIT_FEATURES && time dotnet xunit -c Release -f netcoreapp2.0
- popd

after_script:
- chmod +x .ci/build-docs.sh && ./.ci/build-docs.sh

notifications:
  slack:
    secure: IHVnvL5z2g75VQt9qmJxpAyrbQQPA8VIaO0Of8q4p733E9aA4ZwuFDiqxXcamBbcFJeVPPq4xBTRPZNlTUyZt+No9oFaDnlIA1fKE/ksVH03SqrXwXO0k6toCqofb0/166+ijoe0m6IV7wfT8lvtgD9Lgd9y+M3Zh2NKXAlJasaOve8/pUOcgDqhfT5MST4RD1X4xdjcNnWifEQHACFWgYsM8bD5SrqbAYkHnUcZx0LnY7Cr2RwTUTFS5EN+lbSmy+uhE+JyYFT/5EBIcjLQql8QIHFanTtlGif5rosxb1Wot7pve6KWCGMUnM7FO5vmCbzeRC/kQZ4VGNQyFW8BrOTpOSOAPDfUvlIKuNsARkIYhHvLfjbNtjlcBuyrBKbuvLmGpYo7w+qUGimpi6xZTr3iq0cpb9OYhEtaF/upWI+p77kjjPYlXCg424zP+5SlTVBwCbOsUsKK/l1SjL8RBgpl/bgMTQ7jzEBO+zAWBW7H50d1edZ1IgyClVYbtwR0/gjJGndYyZLALf55x0FnYQkgCuPXU5egmdBiwQUZcRRcjgzY3s9tXLY2NHjI61Zt6IA4JoAugjH03VTo369gj641bLkH3ViVCLnvI6BPIaTsgjs+g6V00K+PT3+Vu9nnLd6eXc72V5QiWHPEMXyGTdnIYnHm9VvK7879c/W/aTM=
